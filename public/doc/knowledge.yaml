swagger: '2.0'
info:
  title: Knowledge Base
  description: This section allow you to manage knowledge base.
  version: "1.0.0"
# the domain of the service
host: localhost
# array of all schemes that your API supports
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json  

# will be prefixed to all paths
basePath: /
paths:     
  /project/{project}/pages:
    get:
      summary: Get list of knowledge pages.
      description: |
        Show list of pages user can access. User can pass directory id to get pages only in that directory.
        User can also get only pinned pages. Pages are sorted by name.
      tags:
        - Knowledge pages
      parameters:
        - name: project
          in: path
          description: Project id
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string   
          required: true
        - name: knowledge_directory_id
          in: query
          description: Directory id for which pages will be shown. If a user will pass 0 as directory id,
            only pages in main project directory will be shown.
          type: number
          format: int
        - name: story_id
          in: query
          description: Story id for which pages will be shown.
          type: number
          format: int          
        - name: pinned
          in: query
          description: Only passing 1 will be viable option.
          type: number
          format: int
        - name: search
          in: query
          description: Allow to search given string in name and content.
          type: number
          format: int
      responses:
        200:
          description: Pages successfully listed
          schema:
              $ref: "#/definitions/PageListResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema: 
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema: 
              $ref: "#/definitions/ErrorResponse"

    post:
      summary: Create knowledge page.
      description: |
        Create knowledge page. Specific users ids or company roles can be passed to set permission rules.
      tags:
        - Knowledge pages
      parameters:
        - name: project
          in: path
          description: Project id for which page will be created
          type: integer
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: name
          in: body
          description: Name of a page
          type: string
          required: true
        - name: content
          in: body
          description: Content of a page (max 30000 chars)
          type: string
          required: true
        - name: pinned
          in: body
          description: Passing true will pin page to project
          type: boolean
        - name: knowledge_directory_id
          in: body
          description: Directory id where page should be placed. Might be null if page is created on main level
          type: integer
        - name: users
          in: body
          description: Array of users ids to limit permission only for these users.
          type: array
          items:
            type: integer
        - name: roles
          in: body
          description: Array of roles ids to limit permission only for users with these roles.
          type: array
          items:
            type: integer
        - name: stories
          type: array
          description: Array of stories ids that are assigned to this knowledge page. 
          in: body
          items:
            type: integer
        - name: involved_ids
          in: body
          description: Array of users ids to be involved with knowledge page.
          type: array
          items:
            type: integer
        - name: interactions
          description: New interactions in knowledge page
          required: false
          in: body
          schema:
            $ref: "#/definitions/Interaction"
      responses:
        201:
          description: Page successfully created
          schema:
              $ref: "#/definitions/PageResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

  /project/{project}/pages/{page}:
    get:
      summary: Show knowledge page.
      description: |
        Show knowledge page and it permissions.
      tags:
        - Knowledge pages
      parameters:
        - name: project
          in: path
          description: Project id
          type: number
          format: int
          required: true
        - name: page
          in: path
          description: page id which will be updated
          type: number
          format: int
          required: true
      responses:
        200:
          description: Page successfully displayed.
          schema:
              $ref: "#/definitions/PageShowResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

    put:
      summary: Update knowledge page.
      description: |
        Update knowledge page and it permissions.
      tags:
        - Knowledge pages
      parameters:
        - name: project
          in: path
          description: Project id
          type: number
          format: int
          required: true
        - name: page
          in: path
          description: page id which will be updated
          type: number
          format: int
          required: true
        - name: name
          in: body
          description: Name of a page
          type: string
          required: true
        - name: content
          in: body
          description: Content of a page (max 30000 chars)
          type: string
          required: true
        - name: pinned
          in: body
          description: Passing true will pin page to project
          type: boolean
        - name: knowledge_directory_id
          in: formData
          description: Directory id where page should be moved. Might be null if page should be on main level
          type: integer
        - name: users
          in: body
          description: Array of users ids to limit permission only for these users.
          type: array
          items:
            type: integer
        - name: roles
          in: body
          description: Array of roles ids to limit permission only for users with these roles.
          type: array
          items:
            type: integer
        - name: stories
          type: array
          description: Array of stories ids that are assigned to this knowledge page. 
          in: body
          items:
            type: integer
        - name: involved_ids
          in: body
          description: Array of users ids to be involved with knowledge page.
          type: array
          items:
            type: integer
        - name: interactions
          description: New interactions in knowledge page
          required: false
          in: body
          schema:
            $ref: "#/definitions/Interaction"
      responses:
        200:
          description: Page successfully updated
          schema:
              $ref: "#/definitions/PageResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

    delete:
      summary: Delete knowledge page.
      description: |
        Delete knowledge page.
      tags:
        - Knowledge pages
      parameters:
        - name: project
          in: path
          description: Project id for which page will be deleted
          type: number
          format: int
          required: true
        - name: page
          in: path
          description: page id which will be deleted
          type: number
          format: int
          required: true
      responses:
        204:
          description: Page successfully deleted. No data will be passed.
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

  /project/{project}/directories:
    get:
      summary: Get list of knowledge directories.
      description: |
        Show list of knowledge directories user can access.
      tags:
        - Knowledge directories
      parameters:
        - name: project
          in: path
          description: Project id
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
      responses:
        200:
          description: Directories successfully listed
          schema:
              $ref: "#/definitions/DirectoryListResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      summary: Create knowledge directory.
      description: |
        Create knowledge directory. Specific users ids or company roles can be passed to set permission rules.
      tags:
        - Knowledge directories
      parameters:
        - name: project
          in: path
          description: Project id for which directory will be created
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: name
          in: formData
          description: Name of a directory
          type: string
          required: true
        - name: users
          in: formData
          description: Array of users ids to limit permission only for these users.
          type: array
          items:
            type: number
            format: int
        - name: roles
          in: formData
          description: Array of roles ids to limit permission only for users with these roles.
          type: array
          items:
            type: number
            format: int
      responses:
        201:
          description: Directory successfully created
          schema:
              $ref: "#/definitions/DirectoryResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

  /project/{project}/directories/{directory):
    put:
      summary: Update knowledge directory.
      description: |
        Update knowledge directory. User can pass id of roles or users to set new access restrictions.
      tags:
        - Knowledge directories
      parameters:
        - name: project
          in: path
          description: Project id
          type: number
          format: int
          required: true
        - name: directory
          in: path
          description: Directory id which will be updated
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: name
          in: formData
          description: New name of a directory
          type: string
          required: true
        - name: users
          in: formData
          description: Array of users ids to limit permission only for these users.
          type: array
          items:
            type: number
            format: int
        - name: roles
          in: formData
          description: Array of roles ids to limit permission only for users with these roles.
          type: array
          items:
            type: number
            format: int
      responses:
        200:
          description: Directory successfully updated
          schema:
              $ref: "#/definitions/DirectoryResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

    delete:
      summary: Delete knowledge directory.
      description: |
        Delete knowledge directory. User can pass id of directory for which pages should be moved.
        If no id passed pages will be move to project main directory
      tags:
        - Knowledge directories
      parameters:
        - name: project
          in: path
          description: Project id for which directory will be deleted
          type: number
          format: int
          required: true
        - name: directory
          in: path
          description: Directory id which will be deleted
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: knowledge_directory_id
          in: formData
          description: Directory id where pages should be moved
          type: number
          format: int
      responses:
        204:
          description: Directory successfully deleted. No data passed
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"
  /project/{project}/pages/{page}/comments:
    post:
      summary: Create knowledge page comment.
      description: |
        Create knowledge page comment.
      tags:
        - Knowledge page comments
      parameters:
        - name: project
          in: path
          description: Project id for which page will be created
          type: number
          format: int
          required: true
        - name: page
          in: path
          description: Knowledge page id
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: text
          in: formData
          description: Text of knowledge page comment(Max 10000 chars)
          type: string
          required: true
        - name: ref
          in: formData
          description: Knowledge page comment ref for frontend(Max 255 chars)
          type: string
          required: false
        - name: type
          in: formData
          description: Knowledge page comment type
          type: string
          required: true
          enum:
            - global
            - internal
        - name: interactions
          description: New interactions in knowledge page comments
          required: false
          in: body
          schema:
            $ref: "#/definitions/Interaction"
      responses:
        201:
          description: Page comment successfully created
          schema:
            $ref: '#/definitions/CommentResponse'
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
            $ref: "#/definitions/ErrorResponse"

  /project/{project}/pages/comments/{page_comment}:
    put:
      summary: Update knowledge page comment.
      description: |
        Update knowledge page comment.
      tags:
        - Knowledge page comments
      parameters:
        - name: project
          in: path
          description: Project id for which page will be created
          type: number
          format: int
          required: true
        - name: page_comment
          in: path
          description: Knowledge page comment id
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: text
          in: formData
          description: Text of knowledge page comment(Max 10000 chars)
          type: string
          required: true
        - name: ref
          in: formData
          description: Knowledge page comment ref for frontend(Max 255 chars)
          type: string
          required: false
        - name: interactions
          description: New interactions in knowledge page comments
          required: false
          in: body
          schema:
            $ref: "#/definitions/Interaction"
      responses:
        200:
          description: Page comment successfully created
          schema:
            $ref: '#/definitions/CommentResponse'
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema:
            $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Delete knowledge page comment.
      description: |
        Delete knowledge page comment.
      tags:
        - Knowledge page comments
      parameters:
        - name: project
          in: path
          description: Project id for which page will be created
          type: number
          format: int
          required: true
        - name: page_comment
          in: path
          description: Knowledge page comment id
          type: number
          format: int
          required: true
        - name: selected_company_id
          in: query
          description: Id of company where user is logged in
          type: string
          required: true
        - name: text
          in: formData
          description: Text of knowledge page comment(Max 10000 chars)
          type: string
          required: true
        - name: ref
          in: formData
          description: Knowledge page comment ref for frontend(Max 255 chars)
          type: string
          required: false
      responses:
        200:
          description: No content
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  Interaction:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/InteractionPing"

  InteractionPing:
    type: object
    properties:
      recipient_id:
        description: Recipient ID
        type: number
        format: int
      ref:
        description: Reference anchor
        type: string
      notifiable:
        description: Notifiable
        type: string
        enum:
          - group
          - user
      message:
        description: Message
        type: string

  DetailsRole:
    type: object
    properties:
      id:
        description: Role ID
        type: integer
      name:
        description: Role name
        type: string

  DetailsUser:
    type: object
    properties:
      id:
        description: User ID
        type: string
      email:
        description: User email
        type: string
      first_name:
        description: User name
        type: string
      last_name:
        description: User surname
        type: string
      avatar:
        description: User avatar
        type: string

  DetailsPage:
    type: object
    properties:
      id:
        description: Page ID
        type: integer
      name:
        description: Page name
        type: string

  Role:
    type: object
    properties:
      role_id:
        description: Role ID
        type: integer
      name:
        type: string
        description: Role name

  User:
    type: object
    properties:
      id:
        description: User ID
        type: integer
      email:
        type: string
        description: User email
      first_name:
        type: string
        description: User first name
      last_name:
        type: string
        description: User last name
      avatar:
        type: string
        description: User avatar url

  CommentWithUser:
    type: object
    required: [id, text, ticket_id, user_id, type, created_at, updated_at, user]
    properties:
      id:
        type: number
        format: int
        description: Comment id
      text:
        type: string
        description: Text
      ticket_id:
        type: number
        format: int
        description: Ticket id
      user_id:
        type: number
        format: int
        description: User id
      type:
        type: string
        description: Type of comment
        enum:
          - global
          - internal
      ref:
        type: string
        description: Reference of comment
      created_at:
        type: string
        description: Date of contractor creation in `Y-m-d H:i:s` format
      updated_at:
        type: string
        description: Date of last contractor update in `Y-m-d H:i:s` format
      user:
        type: object
        properties:
          data:
            $ref: "#/definitions/CommentUser"

  CommentUser:
    type: object
    properties:
      id:
        type: number
        format: int
        description: User id
      email:
        type: string
        description: User e-mail
      first_name:
        type: string
        description: User first name
      last_name:
        type: string
        description: User last name
      avatar:
        type: string
        description: User avatar
      deleted:
        type: boolean
        description: Whether user has been deleted
      activated:
        type: boolean
        description: Whether user has been activated

  PageResponse:
    type: object
    properties:
      data:
        type: object
        description: Page details
        properties:          
          id:
            type: number
            format: int
            description: Page id
          project_id:
            type: number
            format: int
            description: Project id where page belongs to
          creator_id:
            type: number
            format: int
            description: User id who created the page
          pinned:
            type: boolean
            description: Show whether page is pinned to project
          knowledge_directory_id:
            type: number
            format: int
            description: Knowledge directory where page belongs to
          name:
            type: string
            description: Page name
          content:
            type: string
            description: Content of the page
          created_at:   
            type: string
            description: Time when page was created in format `YYYY-mm-dd`
          updated_at:   
            type: string
            description: Time when page was last updated in format `YYYY-mm-dd`
          users:
            type: object
            properties:
              data:
                type: array
                description: If set only these users can access this page
                items:
                  $ref: "#/definitions/User"
          roles:
            type: object
            properties:
              data:
                type: array
                description: If set only these users with these roles can access this page
                items:
                  $ref: "#/definitions/DetailsRole"            
      exec_time:
        type: number
        format: float
        description: API execution time

  PageShowResponse:
    type: object
    properties:
      data:
        type: object
        description: Page details
        properties:          
          id:
            type: number
            format: int
            description: Page id
          project_id:
            type: number
            format: int
            description: Project id where page belongs to
          creator_id:
            type: number
            format: int
            description: User id who created the page
          pinned:
            type: boolean
            description: Show whether page is pinned to project
          knowledge_directory_id:
            type: number
            format: int
            description: Knowledge directory where page belongs to
          name:
            type: string
            description: Page name
          content:
            type: string
            description: Content of the page
          created_at:   
            type: string
            description: Time when page was created in format `YYYY-mm-dd`
          updated_at:   
            type: string
            description: Time when page was last updated in format `YYYY-mm-dd`
          users:
            type: object
            properties:
              data:
                type: array
                description: If set only these users can access this page
                items:
                  $ref: "#/definitions/User"
          roles:
            type: object
            properties:
              data:
                type: array
                description: If set only these users with these roles can access this page
                items:
                  $ref: "#/definitions/DetailsRole"
          stories:
            type: object
            properties:
              data: 
                type: array
                items:
                  $ref: "#/definitions/Story"       
          files:
            type: object
            properties:
              data: 
                type: array
                items:
                  $ref: "#/definitions/File"
          comments:
            type: object
            properties:
              data:
                type: array
                description: Related comments
                items:
                  $ref: "#/definitions/CommentWithUser"
          involved:
            type: object
            properties:
              data:
                type: array
                description: Involved users
                items:
                  $ref: "#/definitions/Involved"
      exec_time:
        type: number
        format: float
        description: API execution time

  Involved:
    type: object
    description: Involved users details
    properties:
      user_id:
        type: integer
        description: Involved user ID
      first_name:
        type: string
        description: Involved user first name
      last_name:
        type: string
        description: Involved user last name
      avatar:
        type: string
        description: Involved user avatar-file url

  File:
    type: object
    description: File details
    properties:
      id:
        type: number
        format: int
        description: File ID
      project_id:
        type: number
        format: int
        description: Project ID
      user_id:
        type: number
        format: int
        description: The user ID that added the file
      name:
        type: string
        description: File name
      size:
        type: number
        format: int
        description: File size
      extension:
        type: string
        description: File extension
      description:
        type: string
        description: File description
      created_at:
        type: string
        description: Date and time when file was created in format `Y-m-d H:i:s`
      updated_at:
        type: string
        description: Date and time when file was last updated in format `Y-m-d H:i:s`           

  DirectoryResponse:
    type: object
    properties:
      data:
        type: object
        description: Directory details
        properties:
          id:
            type: number
            format: int
            description: Directory id
          project_id:
            type: number
            format: int
            description: Project id where directory belongs to
          creator_id:
            type: number
            format: int
            description: User id who created the directory
          name:
            type: string
            description: Directory name
          created_at:
            type: string
            description: Time when directory was created in format `YYYY-mm-dd`
          updated_at:
            type: string
            description: Time when directory was last updated in format `YYYY-mm-dd`
          users:
            type: object
            properties:
              data:
                type: array
                description: If set only these users can access this directory
                items:
                  $ref: "#/definitions/User"
          roles:
            type: object
            properties:
              data:
                type: array
                description: If set only these users with these roles can access this directory
                items:
                  $ref: "#/definitions/DetailsRole"
      exec_time:
        type: number
        format: float
        description: API execution time

  PageListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/PageDetails"
      meta:
        type: object
        properties:
          pagination:
            $ref: "#/definitions/Pagination"
      exec_time:
        type: number
        format: float
        description: API execution time

  DirectoryListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/DirectoryDetails"
      meta:
        type: object
        properties:
          pagination:
            $ref: "#/definitions/Pagination"
      exec_time:
        type: number
        format: float
        description: API execution time

  PageDetails:
    type: object
    description: Page details
    properties:
      id:
        type: number
        format: int
        description: Page id
      project_id:
        type: number
        format: int
        description: Project id where page belongs to
      creator_id:
        type: number
        format: int
        description: User id who created the page
      knowledge_directory_id:
        type: number
        format: int
        description: Knowledge directory where page belongs to
      name:
        type: string
        description: Page name
      content:
        type: string
        description: Content of the page
      pinned:
        type: boolean
        description: Show whether page is pinned to project
      created_at:
        type: string
        description: Time when page was created in format `YYYY-mm-dd`
      updated_at:
        type: string
        description: Time when page was last updated in format `YYYY-mm-dd`
      stories:
        type: object
        properties:
          data: 
            type: array
            items:
              $ref: "#/definitions/Story"
        
  Story:
    type: object
    description: Story details
    properties:
      id:
        type: number
        format: int
        description: Story ID
      project_id:
        type: number
        format: int
        description: Project ID
      name:
        type: string
        description: Story name
      color:
        type: string
        description: Story color (hex)
      priority:
        type: number
        format: int
        description: Story priority          
      created_at:
        type: string
        description: Date of story creation in `Y-m-d H:i:s` format
      updated_at:
        type: string
        description: Date of last story update in `Y-m-d H:i:s` format
      deleted_at:
        type: string
        description: Date of story removal in `Y-m-d H:i:s` format          
        

  DirectoryDetails:
    type: object
    description: Directory details
    properties:
      id:
        type: number
        format: int
        description: Directory id
      project_id:
        type: number
        format: int
        description: Project id where directory belongs to
      creator_id:
        type: number
        format: int
        description: User id who created the directory
      name:
        type: string
        description: Directory name
      created_at:
        type: string
        description: Time when directory was created in format `YYYY-mm-dd`
      updated_at:
        type: string
        description: Time when directory was last updated in format `YYYY-mm-dd`
      roles:
        type: object
        properties:
          data: 
            type: array
            items:
              $ref: "#/definitions/DetailsRole"      
      users:
        type: object
        properties:
          data: 
            type: array
            items:
              $ref: "#/definitions/DetailsUser"  
      pages:
        type: object
        properties:
          data: 
            type: array
            items:
              $ref: "#/definitions/DetailsPage"

  Pagination:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: Total number of results
      count:
        type: number
        format: integer
        description: Number of returned results
      per_page:
        type: number
        format: integer
        description: Number of results per page
      current_page:
        type: number
        format: integer
        description: Number of current page
      total_pages:
        type: number
        format: integer
        description: Total number of pages
      links:
        $ref: "#/definitions/Links"

  Links:
    type: object
    properties:
      previous:
        type: string
        description: Relative link for previous page or results (present only if there's previous page of results)
      next:
        type: string
        description: Relative link for next page or results  (present only if there's next page of results)

  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Error code.
      fields:
        type: array
        description: Error messages for each field. As keys you will get field names and as values you will get error messages for those fields
        items: 
          type: string
      exec_time:
        type: number
        format: float 
        description: API execution time

  CommentResponse:
    type: object
    properties:
      id:
        type: integer
        description: Knowledge page comment id
      knowledge_page_id:
        type: integer
        description: Knowledge page id
      user_id:
        type: integer
        description: Comment creator id
      type:
        type: string
        description: Comment type
        enum:
          - global
          - internal
      text:
        type: string
        description: Comment content
      ref:
        type: string
        description: Reference for frontend
