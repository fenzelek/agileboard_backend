swagger: '2.0'
info:
  title: Password reset
  description: In case user forgets his password, we will send him e-mail with link and after using data from this link, user can set new password for his account
  version: "1.0.0"
# the domain of the service
host: localhost
# array of all schemes that your API supports
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json  
# will be prefixed to all paths
basePath: /
paths:
  /password/reset:
    post:
      summary: Send e-mail for user with token and e-mail 
      description: |
        In order to allow user reset his password, an e-mail will be sent to him with token and his e-mail. Those data (token and e-mail) should be later used when resetting password. **This request does not require authorization**
      tags:
        - Password reset         
      parameters:
        - name: email
          in: formData
          description: User e-mail
          required: true
          type: string
        - name: url
          in: formData
          description: Full url that will be put into e-mail. This url is not validated and should contain `:token` and `:email` placeholders that will be replaced in e-mail with correct values
          required: true
          type: string
        - name: language
          in: formData
          description: Language for sending email
          required: false
          type: string
      responses:
        201:
          description: E-mail was send to user
          schema: 
              $ref: "#/definitions/SuccessPasswordResetPostResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed`
          schema: 
              $ref: "#/definitions/ErrorResponse"              
        404:
          description: Invalid e-mail or user has been deleted or user has not been activated. As code you will get `password.no_user_found`
          schema: 
              $ref: "#/definitions/ErrorResponse"
    put:
      summary: Reset password for user
      description: |
        Set new password for user. For `token` and `e-mail` you should use token and e-mail that was put in e-mail with reset link. **This request does not require authorization**
      tags:
        - Password reset        
      responses:
        200:
          description: Password has been succesfully changed.
          schema: 
              $ref: "#/definitions/SuccessPasswordResetPutResponse"
        422:
          description: Validation error. Depending on error as code you will get `general.validation_failed` (general validation error) or `password.invalid_password` (Invalid password - this should probably never happen) or `password.invalid_token` (in case invalid token has been sent or it has already expired)
          schema: 
              $ref: "#/definitions/ErrorResponse"                      
        404:
          description: User is not found or has been deleted or user has not been activated. As code you will get `auth.user_not_found`
          schema: 
              $ref: "#/definitions/ErrorResponse"        
                      
definitions:
  SuccessPasswordResetPostResponse:
    type: object
    properties:
      data:
        type: array
        description: It will be empty
        items:
          type: string
      exec_time:
        type: number
        format: float
        description: API execution time
  SuccessPasswordResetPutResponse:
    type: object
    properties:
      data:
        type: array
        description: It will be empty
        items:
          type: string
      exec_time:
        type: number
        format: float
        description: API execution time
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Error code.
      fields:
        type: array
        description: Error messages for each field. As keys you will get field names and as values you will get error messages for those fields
        items: 
          type: string
      exec_time:
        type: number
        format: float 
        description: API execution time 
