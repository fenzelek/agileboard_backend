swagger: '2.0'
info:
  title: Statuses
  description: Display and manage statuses
  version: "1.0.0"
# the domain of the service
host: cep.app
# array of all schemes that your API supports
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

# will be prefixed to all paths
basePath: /
paths:
  /projects/{project_id}/statuses:
    get:
      summary: List sprints
      description: |
        List statuses.
      tags:
        - Statuses
      parameters:
        - name: selected_company_id
          in: query
          description: Current company id
          required: true
          type: integer
        - name: project_id
          in: path
          description: Current project id
          required: true
          type: integer
        - name: tickets
          in: query
          description: 0 - without tickets, 1 - with tickets from active sprints
          required: false
          type: boolean
        - name: backlog
            in: query
            description: 1 - tickets from backlog
            required: false
            type: boolean
        - name: sprint_ids
          in: query
          description: Filter tickets from selected sprints
          required: false
          type: array
        - name: story_ids
          in: query
          description: Filter tickets from selected stories
          required: false
          type: array
      responses:
        200:
          description: List of statuses
          schema:
              $ref: "#/definitions/StatusIndexRequestResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed` (if fields are not filled in valid way) or `company.creation_limit` (if user reached limit of companies he can create)
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"
    post:
      summary: Create new statuses
      description: |
        Create new statuses.
      tags:
        - Statuses
      parameters:
        - name: selected_company_id
          in: query
          description: Current company id
          required: true
          type: integer
        - name: project_id
          in: path
          description: Current project id
          required: true
          type: integer
        - name: statuses
          in: body
          description: Statuses array
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/StatusPostRequestResponse"
      responses:
        201:
          description: Status was succesfully saved
          schema:
              $ref: "#/definitions/StatusSavedResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed` (if fields are not filled in valid way) or `company.creation_limit` (if user reached limit of companies he can create)
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

    put:
      summary: Update statuses
      description: |
        Update statuses.
      tags:
        - Statuses
      parameters:
        - name: selected_company_id
          in: query
          description: Current company id
          required: true
          type: integer
        - name: project_id
          in: path
          description: Current project id
          required: true
          type: integer
        - name: statuses
          in: body
          description: Statuses array
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/StatusPutRequestResponse"
      responses:
        200:
          description: Status was succesfully saved
          schema:
              $ref: "#/definitions/StatusUpdatedResponse"
        422:
          description: Validation error. As code you will get `general.validation_failed` (if fields are not filled in valid way) or `company.creation_limit` (if user reached limit of companies he can create)
          schema:
              $ref: "#/definitions/ErrorResponse"
        401:
          description: User has no access to display this page. As code you will get `general.no_action_permission`
          schema:
              $ref: "#/definitions/ErrorResponse"

definitions:
  StatusIndexRequestResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Status"
      exec_time:
        type: number
        format: float
        description: API execution time

  StatusPostRequestResponse:
    type: object
    properties:
      name:
        type: string
        description: Status name

  StatusSavedResponse:
    type: object

    properties:
      data:
          $ref: "#/definitions/Status"
      exec_time:
        type: number
        format: float
        description: API execution time

  StatusPutRequestResponse:
    type: object
    properties:
      id:
        type: integer
        description: Status id (if 0 then new status)
        required: true
      delete:
        type: integer
        description: 0 - edit; 1 - delete
        required: true
      name:
        type: string
        description: Status name (required when delete=0)
      new_status:
        description: Status id (required when delete=1), status where you want to move tasks from deleted status.
        type: integer

  StatusUpdatedResponse:
    type: object

    properties:
      data:
          $ref: "#/definitions/Status"
      exec_time:
        type: number
        format: float
        description: API execution time

  Status:
    type: object
    properties:
      id:
        type: number
        format: int
        description: Status id
      name:
        type: string
        description: Status name
      project_id:
        type: number
        format: int
        description: Project id
      priority:
        type: number
        format: int
        description: Order in list
      created_at:
        type: string
        description: Date of contractor creation in `Y-m-d H:i:s` format
      updated_at:
        type: string
        description: Date of last contractor update in `Y-m-d H:i:s` format
      ticket:
        type: object
        properties:
          data:
            type: object
            $ref: "#/definitions/Ticket"

  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        description: Error code.
      fields:
        type: array
        description: Error messages for each field. As keys you will get field names and as values you will get error messages for those fields
        items:
          type: string
      exec_time:
        type: number
        format: float
        description: API execution time

  Ticket:
    type: object
    properties:
      id:
        type: number
        format: int
        description: Ticket id
      project_id:
        type: number
        format: int
        description: Project id
      sprint_id:
        type: number
        format: int
        description: Sprint id
      status_id:
        type: number
        format: int
        description: Status id
      name:
        type: string
        description: Unique ticket name
      title:
        type: string
        description: Title of ticket
      type_id:
        type: number
        format: int
        description: Type id
      assigned_id:
        type: number
        format: int
        description: Id user who is assigned to ticket
      reporter_id:
        type: number
        format: int
        description: Id user who added ticket
      description:
        type: string
        description: Description
      estimate_time:
        type: number
        format: int
        description: Estimate time in seconds
      scheduled_time_start:
        type: number
        format: int
        description: Scheduled datatime start in format Y-m-d H:i:s
      scheduled_time_end:
        type: number
        format: int
        description: Scheduled datatime end in format Y-m-d H:i:s
      priority:
        type: number
        format: int
        description: Order in list
      hidden:
        type: boolean
        description: Marking hidden tickets
      created_at:
        type: string
        description: Date of contractor creation in `Y-m-d H:i:s` format
      updated_at:
        type: string
        description: Date of last contractor update in `Y-m-d H:i:s` format
      comments_count:
        type: number
        format: int
        description: Number of comments added to this ticket
      files_count:
        type: number
        format: int
        description: Number of files assigned to this ticket
      assigned_user:
        type: object
        descrpition: User assigned to this ticket. If no user assigned, data will be empty
        properties:
          data:
              type: object
              $ref: "#/definitions/User"


  User:
    type: object
    properties:
      id:
        type: number
        format: int
        description: User id
      email:
        type: string
        description: User e-mail
      first_name:
        type: string
        description: User first name
      last_name:
        type: string
        description: User last name
      avatar:
        type: string
        description: User avatar
      deleted:
        type: boolean
        description: Whether user has been deleted
      activated:
        type: boolean
        description: Whether user has been activated
